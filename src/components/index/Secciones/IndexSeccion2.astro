---

import RiveComponent from "../../global/animations/riveComponent";

import { isEnglish } from  "../../../data/variables.js";
---


<section id="intro" class="fade-in-section" >


    <div class="rivecomp web">
      <RiveComponent
        src="/rive/funeraria-v2.riv"
        artboard="seccion_intro"
        stateMachines="State Machine 1"
        autoplay={true}
        fit="fill"
        client:only="react"
        transition:persist
        ingles={isEnglish.value}
      />
    </div>

    <div class="rivecomp movil">

      <RiveComponent 
      src="/rive/funeraria-v2.riv" 
      artboard="seccion_intro"
      stateMachines="State Machine 1"
      autoplay={true} 
      transition:persist 
      fit="contain"
      client:only
      ingles={isEnglish.value}
      />
    
      </div>



</section>


<style>

section {
position: relative;
display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
width: 100vw;
height: 75vh;


/* antialiasing */
-webkit-font-smoothing: antialiased;



}
.centered-text {
  text-align: center;
}

.large-text {
  font-size: 5em; /* Aumenta el tamaño de las letras del h1 */
}

.white-text {
  color: white;
}

.bold-text {
  font-weight: bold;
}



.fade-in-section {
  opacity: 0;
  transform: translateY(100px); /* Empieza ligeramente más abajo */
  transition: opacity 1.5s ease-out, transform 1.5s ease-out;
  will-change: opacity, transform;
}

.fade-in-section.visible {
  opacity: 1;
  transform: translateY(0); /* Vuelve a su posición original */
}
.rivecomp {
position: absolute;
display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
width: 100%;
height: 100%;
min-width: 100vw;
/* background-color: black; */
z-index: 2;
}




.web {
display: block;
}

.movil {
display: none;
}

@media (max-width: 900px) {
section {
  cursor: default;
  height: 100vh;
}
.web {
  display: none;
}
.movil {
  display: block;
}
}

</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll(".fade-in-section");

    const observer = new IntersectionObserver(
      (entries, observer) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            observer.unobserve(entry.target); // Deja de observar después de activarse
          }
        });
      },
      { threshold: 0.4 } // El efecto se activará cuando el 20% del elemento sea visible
    );

    sections.forEach(section => observer.observe(section));
  });
</script>