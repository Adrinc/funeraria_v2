---
import RiveComponent from "../../global/animations/riveComponent";
---


    <section id="experience" class="fade-in-section">
      <div class="rivecomp web">

        <RiveComponent
          src="/rive/funeraria.riv"
          artboard="why_section"
          stateMachines="State Machine 1"
          autoplay={true}
          fit="fill"
          client:only="react" 
          transition:persist
        />
      </div>

      <div class="rivecomp movil">

        <RiveComponent 
        src="/rive/funeraria.riv" 
        artboard="why_section_movil"
        stateMachines="State Machine 1"
        autoplay={true} 
        transition:persist 
        fit="fill"
        client:only/>
      
        </div>

    </section>



    <style>

      section {
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      width: 100vw;
      height: 100vh;
      background: linear-gradient(to right, #E2D5C4, #FBFAF5);
      -webkit-font-smoothing: antialiased;
      
      }
   
      .rivecomp {
      position: absolute;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      width: 100%;
      height: 100%;
      
      z-index: 2;
      }
      
      
      
      
      .fade-in-section {
  opacity: 0;
/*   transform: translateY(100px); */ 
  transition: opacity 1.5s ease-out, transform 1.5s ease-out;
  will-change: opacity, transform;
}

.fade-in-section.visible {
  opacity: 1;
/*   transform: translateY(0); 
 */}
      .web {
      display: block;
      }
      
      .movil {
      display: none;
      }
      
      @media (max-width: 768px) {
      section {
        cursor: default;
        height: 1250px;
      }
      .web {
        display: none;
      }
      .movil {
        display: block;
      }
      }
      
      </style>
      
      <script>
        document.addEventListener("DOMContentLoaded", () => {
          const sections = document.querySelectorAll(".fade-in-section");
      
          const observer = new IntersectionObserver(
            (entries, observer) => {
              entries.forEach(entry => {
                if (entry.isIntersecting) {
                  entry.target.classList.add("visible");
                  observer.unobserve(entry.target); // Deja de observar después de activarse
                }
              });
            },
            { threshold: 0.3 } // El efecto se activará cuando el 20% del elemento sea visible
          );
      
          sections.forEach(section => observer.observe(section));
        });
      </script>